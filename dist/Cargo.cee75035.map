{"version":3,"sources":["../.cache/.cargo-web/loader-19867e9930789556f8daa1c21cea3ed0.js"],"names":["module","exports","bundle","__initialize","__wasm_module","__load_asynchronously","instance","Module","STDWEB_PRIVATE","to_utf8","str","addr","i","length","u","charCodeAt","HEAPU8","noop","to_js","address","kind","HEAP32","HEAPF64","pointer","HEAPU32","to_js_string","arena","output","push","value_array_pointer","key_array_pointer","key_pointer","key_length","key","value","acquire_js_reference","adapter_pointer","deallocator_pointer","num_ongoing_calls","drop_queued","ReferenceError","function_pointer","drop","args","alloc","serialize_array","arguments","dyncall","result","tmp","array_kind","pointer_end","subarray","HEAP8","HEAPU16","HEAP16","HEAPF32","get_raw_value","serialize_object","keys","Object","key_address","to_utf8_string","from_js","cachedEncoder","TextEncoder","util","buffer","encode","set","utf8_len","prototype","toString","call","undefined","id","register_raw_value","refid","acquire_rust_reference","cachedDecoder","TextDecoder","index","decode","end","x","String","fromCharCode","init","y","ch","z","y_z","w","id_to_ref_map","id_to_refcount_map","ref_to_id_map","WeakMap","ref_to_id_map_fallback","Map","last_refid","id_to_raw_value_map","last_raw_value_id","reference","get","e","increment_refcount","decrement_refcount","delete","unregister_raw_value","size","web_malloc","signature","ptr","web_table","apply","len","prepare_any_arg","arg","acquire_tmp","dummy","__web_on_grow","memory","Int8Array","Int16Array","Int32Array","Uint8Array","Uint16Array","Uint32Array","Float32Array","Float64Array","defineProperty","imports","env","$0","$1","success","reason","console","error","dotCode","initialize","__web_malloc","__web_free","__indirect_function_table","compile","pando_code","newTask","task_identifier","deleteTask","toggleDependency","dependency_identifier","progressTask","module_factory","WebAssembly","instantiate","then","wasm_instance","log","catch","Instance","fetch","response","arrayBuffer","bytes","mod"],"mappings":"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","file":"Cargo.cee75035.map","sourceRoot":"..\\javascript","sourcesContent":["\n            module.exports = function( bundle ) {\n                function __initialize( __wasm_module, __load_asynchronously ) {\n    return (function( module_factory ) {\n        var instance = module_factory();\n        if( __load_asynchronously ) {\n            return WebAssembly.instantiate( __wasm_module, instance.imports )\n                .then( function( wasm_instance ) {\n                    var exports = instance.initialize( wasm_instance );\n                    console.log( \"Finished loading Rust wasm module 'pando'\" );\n                    return exports;\n                })\n                .catch( function( error ) {\n                    console.log( \"Error loading Rust wasm module 'pando':\", error );\n                    throw error;\n                });\n        } else {\n            var instance = new WebAssembly.Instance( __wasm_module, instance.imports );\n            return instance.initialize( wasm_instance );\n        }\n    }( function() {\n    var Module = {};\n\n    Module.STDWEB_PRIVATE = {};\n\n// This is based on code from Emscripten's preamble.js.\nModule.STDWEB_PRIVATE.to_utf8 = function to_utf8( str, addr ) {\n    for( var i = 0; i < str.length; ++i ) {\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629\n        var u = str.charCodeAt( i ); // possibly a lead surrogate\n        if( u >= 0xD800 && u <= 0xDFFF ) {\n            u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt( ++i ) & 0x3FF);\n        }\n\n        if( u <= 0x7F ) {\n            HEAPU8[ addr++ ] = u;\n        } else if( u <= 0x7FF ) {\n            HEAPU8[ addr++ ] = 0xC0 | (u >> 6);\n            HEAPU8[ addr++ ] = 0x80 | (u & 63);\n        } else if( u <= 0xFFFF ) {\n            HEAPU8[ addr++ ] = 0xE0 | (u >> 12);\n            HEAPU8[ addr++ ] = 0x80 | ((u >> 6) & 63);\n            HEAPU8[ addr++ ] = 0x80 | (u & 63);\n        } else if( u <= 0x1FFFFF ) {\n            HEAPU8[ addr++ ] = 0xF0 | (u >> 18);\n            HEAPU8[ addr++ ] = 0x80 | ((u >> 12) & 63);\n            HEAPU8[ addr++ ] = 0x80 | ((u >> 6) & 63);\n            HEAPU8[ addr++ ] = 0x80 | (u & 63);\n        } else if( u <= 0x3FFFFFF ) {\n            HEAPU8[ addr++ ] = 0xF8 | (u >> 24);\n            HEAPU8[ addr++ ] = 0x80 | ((u >> 18) & 63);\n            HEAPU8[ addr++ ] = 0x80 | ((u >> 12) & 63);\n            HEAPU8[ addr++ ] = 0x80 | ((u >> 6) & 63);\n            HEAPU8[ addr++ ] = 0x80 | (u & 63);\n        } else {\n            HEAPU8[ addr++ ] = 0xFC | (u >> 30);\n            HEAPU8[ addr++ ] = 0x80 | ((u >> 24) & 63);\n            HEAPU8[ addr++ ] = 0x80 | ((u >> 18) & 63);\n            HEAPU8[ addr++ ] = 0x80 | ((u >> 12) & 63);\n            HEAPU8[ addr++ ] = 0x80 | ((u >> 6) & 63);\n            HEAPU8[ addr++ ] = 0x80 | (u & 63);\n        }\n    }\n};\n\nModule.STDWEB_PRIVATE.noop = function() {};\nModule.STDWEB_PRIVATE.to_js = function to_js( address ) {\n    var kind = HEAPU8[ address + 12 ];\n    if( kind === 0 ) {\n        return undefined;\n    } else if( kind === 1 ) {\n        return null;\n    } else if( kind === 2 ) {\n        return HEAP32[ address / 4 ];\n    } else if( kind === 3 ) {\n        return HEAPF64[ address / 8 ];\n    } else if( kind === 4 ) {\n        var pointer = HEAPU32[ address / 4 ];\n        var length = HEAPU32[ (address + 4) / 4 ];\n        return Module.STDWEB_PRIVATE.to_js_string( pointer, length );\n    } else if( kind === 5 ) {\n        return false;\n    } else if( kind === 6 ) {\n        return true;\n    } else if( kind === 7 ) {\n        var pointer = Module.STDWEB_PRIVATE.arena + HEAPU32[ address / 4 ];\n        var length = HEAPU32[ (address + 4) / 4 ];\n        var output = [];\n        for( var i = 0; i < length; ++i ) {\n            output.push( Module.STDWEB_PRIVATE.to_js( pointer + i * 16 ) );\n        }\n        return output;\n    } else if( kind === 8 ) {\n        var arena = Module.STDWEB_PRIVATE.arena;\n        var value_array_pointer = arena + HEAPU32[ address / 4 ];\n        var length = HEAPU32[ (address + 4) / 4 ];\n        var key_array_pointer = arena + HEAPU32[ (address + 8) / 4 ];\n        var output = {};\n        for( var i = 0; i < length; ++i ) {\n            var key_pointer = HEAPU32[ (key_array_pointer + i * 8) / 4 ];\n            var key_length = HEAPU32[ (key_array_pointer + 4 + i * 8) / 4 ];\n            var key = Module.STDWEB_PRIVATE.to_js_string( key_pointer, key_length );\n            var value = Module.STDWEB_PRIVATE.to_js( value_array_pointer + i * 16 );\n            output[ key ] = value;\n        }\n        return output;\n    } else if( kind === 9 ) {\n        return Module.STDWEB_PRIVATE.acquire_js_reference( HEAP32[ address / 4 ] );\n    } else if( kind === 10 || kind === 12 || kind === 13 ) {\n        var adapter_pointer = HEAPU32[ address / 4 ];\n        var pointer = HEAPU32[ (address + 4) / 4 ];\n        var deallocator_pointer = HEAPU32[ (address + 8) / 4 ];\n        var num_ongoing_calls = 0;\n        var drop_queued = false;\n        var output = function() {\n            if( pointer === 0 || drop_queued === true ) {\n                if (kind === 10) {\n                    throw new ReferenceError( \"Already dropped Rust function called!\" );\n                } else if (kind === 12) {\n                    throw new ReferenceError( \"Already dropped FnMut function called!\" );\n                } else {\n                    throw new ReferenceError( \"Already called or dropped FnOnce function called!\" );\n                }\n            }\n\n            var function_pointer = pointer;\n            if (kind === 13) {\n                output.drop = Module.STDWEB_PRIVATE.noop;\n                pointer = 0;\n            }\n\n            if (num_ongoing_calls !== 0) {\n                if (kind === 12 || kind === 13) {\n                    throw new ReferenceError( \"FnMut function called multiple times concurrently!\" );\n                }\n            }\n\n            var args = Module.STDWEB_PRIVATE.alloc( 16 );\n            Module.STDWEB_PRIVATE.serialize_array( args, arguments );\n\n            try {\n                num_ongoing_calls += 1;\n                Module.STDWEB_PRIVATE.dyncall( \"vii\", adapter_pointer, [function_pointer, args] );\n                var result = Module.STDWEB_PRIVATE.tmp;\n                Module.STDWEB_PRIVATE.tmp = null;\n            } finally {\n                num_ongoing_calls -= 1;\n            }\n\n            if( drop_queued === true && num_ongoing_calls === 0 ) {\n                output.drop();\n            }\n\n            return result;\n        };\n\n        output.drop = function() {\n            if (num_ongoing_calls !== 0) {\n                drop_queued = true;\n                return;\n            }\n\n            output.drop = Module.STDWEB_PRIVATE.noop;\n            var function_pointer = pointer;\n            pointer = 0;\n\n            if (function_pointer != 0) {\n                Module.STDWEB_PRIVATE.dyncall( \"vi\", deallocator_pointer, [function_pointer] );\n            }\n        };\n\n        return output;\n    } else if( kind === 14 ) {\n        var pointer = HEAPU32[ address / 4 ];\n        var length = HEAPU32[ (address + 4) / 4 ];\n        var array_kind = HEAPU32[ (address + 8) / 4 ];\n        var pointer_end = pointer + length;\n\n        switch( array_kind ) {\n            case 0:\n                return HEAPU8.subarray( pointer, pointer_end );\n            case 1:\n                return HEAP8.subarray( pointer, pointer_end );\n            case 2:\n                return HEAPU16.subarray( pointer, pointer_end );\n            case 3:\n                return HEAP16.subarray( pointer, pointer_end );\n            case 4:\n                return HEAPU32.subarray( pointer, pointer_end );\n            case 5:\n                return HEAP32.subarray( pointer, pointer_end );\n            case 6:\n                return HEAPF32.subarray( pointer, pointer_end );\n            case 7:\n                return HEAPF64.subarray( pointer, pointer_end );\n        }\n    } else if( kind === 15 ) {\n        return Module.STDWEB_PRIVATE.get_raw_value( HEAPU32[ address / 4 ] );\n    }\n};\n\nModule.STDWEB_PRIVATE.serialize_object = function serialize_object( address, value ) {\n    var keys = Object.keys( value );\n    var length = keys.length;\n    var key_array_pointer = Module.STDWEB_PRIVATE.alloc( length * 8 );\n    var value_array_pointer = Module.STDWEB_PRIVATE.alloc( length * 16 );\n    HEAPU8[ address + 12 ] = 8;\n    HEAPU32[ address / 4 ] = value_array_pointer;\n    HEAPU32[ (address + 4) / 4 ] = length;\n    HEAPU32[ (address + 8) / 4 ] = key_array_pointer;\n    for( var i = 0; i < length; ++i ) {\n        var key = keys[ i ];\n        var key_address = key_array_pointer + i * 8;\n        Module.STDWEB_PRIVATE.to_utf8_string( key_address, key );\n\n        Module.STDWEB_PRIVATE.from_js( value_array_pointer + i * 16, value[ key ] );\n    }\n};\n\nModule.STDWEB_PRIVATE.serialize_array = function serialize_array( address, value ) {\n    var length = value.length;\n    var pointer = Module.STDWEB_PRIVATE.alloc( length * 16 );\n    HEAPU8[ address + 12 ] = 7;\n    HEAPU32[ address / 4 ] = pointer;\n    HEAPU32[ (address + 4) / 4 ] = length;\n    for( var i = 0; i < length; ++i ) {\n        Module.STDWEB_PRIVATE.from_js( pointer + i * 16, value[ i ] );\n    }\n};\n\n// New browsers and recent Node\nvar cachedEncoder = ( typeof TextEncoder === \"function\"\n    ? new TextEncoder( \"utf-8\" )\n    // Old Node (before v11)\n    : ( typeof util === \"object\" && util && typeof util.TextEncoder === \"function\"\n        ? new util.TextEncoder( \"utf-8\" )\n        // Old browsers\n        : null ) );\n\nif ( cachedEncoder != null ) {\n    Module.STDWEB_PRIVATE.to_utf8_string = function to_utf8_string( address, value ) {\n        var buffer = cachedEncoder.encode( value );\n        var length = buffer.length;\n        var pointer = 0;\n\n        if ( length > 0 ) {\n            pointer = Module.STDWEB_PRIVATE.alloc( length );\n            HEAPU8.set( buffer, pointer );\n        }\n\n        HEAPU32[ address / 4 ] = pointer;\n        HEAPU32[ (address + 4) / 4 ] = length;\n    };\n\n} else {\n    Module.STDWEB_PRIVATE.to_utf8_string = function to_utf8_string( address, value ) {\n        var length = Module.STDWEB_PRIVATE.utf8_len( value );\n        var pointer = 0;\n\n        if ( length > 0 ) {\n            pointer = Module.STDWEB_PRIVATE.alloc( length );\n            Module.STDWEB_PRIVATE.to_utf8( value, pointer );\n        }\n\n        HEAPU32[ address / 4 ] = pointer;\n        HEAPU32[ (address + 4) / 4 ] = length;\n    };\n}\n\nModule.STDWEB_PRIVATE.from_js = function from_js( address, value ) {\n    var kind = Object.prototype.toString.call( value );\n    if( kind === \"[object String]\" ) {\n        HEAPU8[ address + 12 ] = 4;\n        Module.STDWEB_PRIVATE.to_utf8_string( address, value );\n    } else if( kind === \"[object Number]\" ) {\n        if( value === (value|0) ) {\n            HEAPU8[ address + 12 ] = 2;\n            HEAP32[ address / 4 ] = value;\n        } else {\n            HEAPU8[ address + 12 ] = 3;\n            HEAPF64[ address / 8 ] = value;\n        }\n    } else if( value === null ) {\n        HEAPU8[ address + 12 ] = 1;\n    } else if( value === undefined ) {\n        HEAPU8[ address + 12 ] = 0;\n    } else if( value === false ) {\n        HEAPU8[ address + 12 ] = 5;\n    } else if( value === true ) {\n        HEAPU8[ address + 12 ] = 6;\n    } else if( kind === \"[object Symbol]\" ) {\n        var id = Module.STDWEB_PRIVATE.register_raw_value( value );\n        HEAPU8[ address + 12 ] = 15;\n        HEAP32[ address / 4 ] = id;\n    } else {\n        var refid = Module.STDWEB_PRIVATE.acquire_rust_reference( value );\n        HEAPU8[ address + 12 ] = 9;\n        HEAP32[ address / 4 ] = refid;\n    }\n};\n\n// New browsers and recent Node\nvar cachedDecoder = ( typeof TextDecoder === \"function\"\n    ? new TextDecoder( \"utf-8\" )\n    // Old Node (before v11)\n    : ( typeof util === \"object\" && util && typeof util.TextDecoder === \"function\"\n        ? new util.TextDecoder( \"utf-8\" )\n        // Old browsers\n        : null ) );\n\nif ( cachedDecoder != null ) {\n    Module.STDWEB_PRIVATE.to_js_string = function to_js_string( index, length ) {\n        return cachedDecoder.decode( HEAPU8.subarray( index, index + length ) );\n    };\n\n} else {\n    // This is ported from Rust's stdlib; it's faster than\n    // the string conversion from Emscripten.\n    Module.STDWEB_PRIVATE.to_js_string = function to_js_string( index, length ) {\n        index = index|0;\n        length = length|0;\n        var end = (index|0) + (length|0);\n        var output = \"\";\n        while( index < end ) {\n            var x = HEAPU8[ index++ ];\n            if( x < 128 ) {\n                output += String.fromCharCode( x );\n                continue;\n            }\n            var init = (x & (0x7F >> 2));\n            var y = 0;\n            if( index < end ) {\n                y = HEAPU8[ index++ ];\n            }\n            var ch = (init << 6) | (y & 63);\n            if( x >= 0xE0 ) {\n                var z = 0;\n                if( index < end ) {\n                    z = HEAPU8[ index++ ];\n                }\n                var y_z = ((y & 63) << 6) | (z & 63);\n                ch = init << 12 | y_z;\n                if( x >= 0xF0 ) {\n                    var w = 0;\n                    if( index < end ) {\n                        w = HEAPU8[ index++ ];\n                    }\n                    ch = (init & 7) << 18 | ((y_z << 6) | (w & 63));\n\n                    output += String.fromCharCode( 0xD7C0 + (ch >> 10) );\n                    ch = 0xDC00 + (ch & 0x3FF);\n                }\n            }\n            output += String.fromCharCode( ch );\n            continue;\n        }\n        return output;\n    };\n}\n\nModule.STDWEB_PRIVATE.id_to_ref_map = {};\nModule.STDWEB_PRIVATE.id_to_refcount_map = {};\nModule.STDWEB_PRIVATE.ref_to_id_map = new WeakMap();\n// Not all types can be stored in a WeakMap\nModule.STDWEB_PRIVATE.ref_to_id_map_fallback = new Map();\nModule.STDWEB_PRIVATE.last_refid = 1;\n\nModule.STDWEB_PRIVATE.id_to_raw_value_map = {};\nModule.STDWEB_PRIVATE.last_raw_value_id = 1;\n\nModule.STDWEB_PRIVATE.acquire_rust_reference = function( reference ) {\n    if( reference === undefined || reference === null ) {\n        return 0;\n    }\n\n    var id_to_refcount_map = Module.STDWEB_PRIVATE.id_to_refcount_map;\n    var id_to_ref_map = Module.STDWEB_PRIVATE.id_to_ref_map;\n    var ref_to_id_map = Module.STDWEB_PRIVATE.ref_to_id_map;\n    var ref_to_id_map_fallback = Module.STDWEB_PRIVATE.ref_to_id_map_fallback;\n\n    var refid = ref_to_id_map.get( reference );\n    if( refid === undefined ) {\n        refid = ref_to_id_map_fallback.get( reference );\n    }\n    if( refid === undefined ) {\n        refid = Module.STDWEB_PRIVATE.last_refid++;\n        try {\n            ref_to_id_map.set( reference, refid );\n        } catch (e) {\n            ref_to_id_map_fallback.set( reference, refid );\n        }\n    }\n\n    if( refid in id_to_ref_map ) {\n        id_to_refcount_map[ refid ]++;\n    } else {\n        id_to_ref_map[ refid ] = reference;\n        id_to_refcount_map[ refid ] = 1;\n    }\n\n    return refid;\n};\n\nModule.STDWEB_PRIVATE.acquire_js_reference = function( refid ) {\n    return Module.STDWEB_PRIVATE.id_to_ref_map[ refid ];\n};\n\nModule.STDWEB_PRIVATE.increment_refcount = function( refid ) {\n    Module.STDWEB_PRIVATE.id_to_refcount_map[ refid ]++;\n};\n\nModule.STDWEB_PRIVATE.decrement_refcount = function( refid ) {\n    var id_to_refcount_map = Module.STDWEB_PRIVATE.id_to_refcount_map;\n    if( 0 == --id_to_refcount_map[ refid ] ) {\n        var id_to_ref_map = Module.STDWEB_PRIVATE.id_to_ref_map;\n        var ref_to_id_map_fallback = Module.STDWEB_PRIVATE.ref_to_id_map_fallback;\n        var reference = id_to_ref_map[ refid ];\n        delete id_to_ref_map[ refid ];\n        delete id_to_refcount_map[ refid ];\n        ref_to_id_map_fallback.delete(reference);\n    }\n};\n\nModule.STDWEB_PRIVATE.register_raw_value = function( value ) {\n    var id = Module.STDWEB_PRIVATE.last_raw_value_id++;\n    Module.STDWEB_PRIVATE.id_to_raw_value_map[ id ] = value;\n    return id;\n};\n\nModule.STDWEB_PRIVATE.unregister_raw_value = function( id ) {\n    delete Module.STDWEB_PRIVATE.id_to_raw_value_map[ id ];\n};\n\nModule.STDWEB_PRIVATE.get_raw_value = function( id ) {\n    return Module.STDWEB_PRIVATE.id_to_raw_value_map[ id ];\n};\n\nModule.STDWEB_PRIVATE.alloc = function alloc( size ) {\n    return Module.web_malloc( size );\n};\n\nModule.STDWEB_PRIVATE.dyncall = function( signature, ptr, args ) {\n    return Module.web_table.get( ptr ).apply( null, args );\n};\n\n// This is based on code from Emscripten's preamble.js.\nModule.STDWEB_PRIVATE.utf8_len = function utf8_len( str ) {\n    var len = 0;\n    for( var i = 0; i < str.length; ++i ) {\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        var u = str.charCodeAt( i ); // possibly a lead surrogate\n        if( u >= 0xD800 && u <= 0xDFFF ) {\n            u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt( ++i ) & 0x3FF);\n        }\n\n        if( u <= 0x7F ) {\n            ++len;\n        } else if( u <= 0x7FF ) {\n            len += 2;\n        } else if( u <= 0xFFFF ) {\n            len += 3;\n        } else if( u <= 0x1FFFFF ) {\n            len += 4;\n        } else if( u <= 0x3FFFFFF ) {\n            len += 5;\n        } else {\n            len += 6;\n        }\n    }\n    return len;\n};\n\nModule.STDWEB_PRIVATE.prepare_any_arg = function( value ) {\n    var arg = Module.STDWEB_PRIVATE.alloc( 16 );\n    Module.STDWEB_PRIVATE.from_js( arg, value );\n    return arg;\n};\n\nModule.STDWEB_PRIVATE.acquire_tmp = function( dummy ) {\n    var value = Module.STDWEB_PRIVATE.tmp;\n    Module.STDWEB_PRIVATE.tmp = null;\n    return value;\n};\n\n\n\n    var HEAP8 = null;\n    var HEAP16 = null;\n    var HEAP32 = null;\n    var HEAPU8 = null;\n    var HEAPU16 = null;\n    var HEAPU32 = null;\n    var HEAPF32 = null;\n    var HEAPF64 = null;\n\n    Object.defineProperty( Module, 'exports', { value: {} } );\n\n    function __web_on_grow() {\n        var buffer = Module.instance.exports.memory.buffer;\n        HEAP8 = new Int8Array( buffer );\n        HEAP16 = new Int16Array( buffer );\n        HEAP32 = new Int32Array( buffer );\n        HEAPU8 = new Uint8Array( buffer );\n        HEAPU16 = new Uint16Array( buffer );\n        HEAPU32 = new Uint32Array( buffer );\n        HEAPF32 = new Float32Array( buffer );\n        HEAPF64 = new Float64Array( buffer );\n    }\n\n    return {\n        imports: {\n            env: {\n                \"__cargo_web_snippet_1639bcfa7392f2a90b432593a0b026dab94ec9c7\": function($0, $1) {\n                $1 = Module.STDWEB_PRIVATE.to_js($1);Module.STDWEB_PRIVATE.from_js($0, (function(){return{success:false,reason:($1)}})());\n            },\n            \"__cargo_web_snippet_4fd31c9e56d40b8642cf9e6f96fd6b570f355cea\": function($0) {\n                $0 = Module.STDWEB_PRIVATE.to_js($0);console.error(($0));\n            },\n            \"__cargo_web_snippet_59c9efb7acb3bed4a30c1e11ef7d595eb6da96f0\": function($0, $1) {\n                $1 = Module.STDWEB_PRIVATE.to_js($1);Module.STDWEB_PRIVATE.from_js($0, (function(){return{success:true,dotCode:($1)}})());\n            },\n            \"__cargo_web_snippet_80d6d56760c65e49b7be8b6b01c1ea861b046bf0\": function($0) {\n                Module.STDWEB_PRIVATE.decrement_refcount( $0 );\n            },\n            \"__cargo_web_snippet_e9638d6405ab65f78daf4a5af9c9de14ecf1e2ec\": function($0) {\n                $0 = Module.STDWEB_PRIVATE.to_js($0);Module.STDWEB_PRIVATE.unregister_raw_value(($0));\n            },\n            \"__cargo_web_snippet_ff5103e6cc179d13b4c7a785bdce2708fd559fc0\": function($0) {\n                Module.STDWEB_PRIVATE.tmp = Module.STDWEB_PRIVATE.to_js( $0 );\n            },\n                \"__web_on_grow\": __web_on_grow\n            }\n        },\n        initialize: function( instance ) {\n            Object.defineProperty( Module, 'instance', { value: instance } );\n            Object.defineProperty( Module, 'web_malloc', { value: Module.instance.exports.__web_malloc } );\n            Object.defineProperty( Module, 'web_free', { value: Module.instance.exports.__web_free } );\n            Object.defineProperty( Module, 'web_table', { value: Module.instance.exports.__indirect_function_table } );\n\n            Module.exports.compile = function compile(pando_code) {\n    return Module.STDWEB_PRIVATE.acquire_tmp(Module.instance.exports.compile(Module.STDWEB_PRIVATE.prepare_any_arg(pando_code)));\n}\n;\n                Module.exports.newTask = function newTask(task_identifier, pando_code) {\n    return Module.STDWEB_PRIVATE.acquire_tmp(Module.instance.exports.newTask(Module.STDWEB_PRIVATE.prepare_any_arg(task_identifier), Module.STDWEB_PRIVATE.prepare_any_arg(pando_code)));\n}\n;\n                Module.exports.deleteTask = function deleteTask(task_identifier, pando_code) {\n    return Module.STDWEB_PRIVATE.acquire_tmp(Module.instance.exports.deleteTask(Module.STDWEB_PRIVATE.prepare_any_arg(task_identifier), Module.STDWEB_PRIVATE.prepare_any_arg(pando_code)));\n}\n;\n                Module.exports.toggleDependency = function toggleDependency(task_identifier, dependency_identifier, pando_code) {\n    return Module.STDWEB_PRIVATE.acquire_tmp(Module.instance.exports.toggleDependency(Module.STDWEB_PRIVATE.prepare_any_arg(task_identifier), Module.STDWEB_PRIVATE.prepare_any_arg(dependency_identifier), Module.STDWEB_PRIVATE.prepare_any_arg(pando_code)));\n}\n;\n                Module.exports.progressTask = function progressTask(task_identifier, pando_code) {\n    return Module.STDWEB_PRIVATE.acquire_tmp(Module.instance.exports.progressTask(Module.STDWEB_PRIVATE.prepare_any_arg(task_identifier), Module.STDWEB_PRIVATE.prepare_any_arg(pando_code)));\n}\n;\n            __web_on_grow();\n            \n\n            return Module.exports;\n        }\n    };\n}\n ));\n}\n\n                return fetch( bundle )\n                    .then( response => response.arrayBuffer() )\n                    .then( bytes => WebAssembly.compile( bytes ) )\n                    .then( mod => __initialize( mod, true ) );\n            };\n        "]}